openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
  description: API documentation for Node.js project
servers:
  - url: http://localhost:3000
    description: Local server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    Post:
      type: object
      required:
        - title
        - content
      properties:
        title:
          type: string
        content:
          type: string
paths:
  /users/register:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Error registering user
  /users/login:
    post:
      summary: Login a user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid username or password
  /users/logout:
    post:
      summary: Logout a user
      tags:
        - Users
      responses:
        "200":
          description: User logged out successfully
  /posts:
    post:
      summary: Create a new post
      tags:
        - Posts
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "201":
          description: Post created successfully
        "400":
          description: Error creating post
  /employees:
    post:
      summary: Add a new employee
      tags:
        - Employees
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        "201":
          description: Employee added successfully
        "400":
          description: Error adding employee
    get:
      summary: Get all employees
      tags:
        - Employees
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Employee"
        "400":
          description: Error fetching employees
  /employees/{id}:
    get:
      summary: Get details of a specific employee
      tags:
        - Employees
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Employee ID
      responses:
        "200":
          description: Employee details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        "400":
          description: Error fetching employee
    put:
      summary: Modify existing employee data
      tags:
        - Employees
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Employee ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        "200":
          description: Employee modified successfully
        "400":
          description: Error modifying employee
    delete:
      summary: Remove an employee
      tags:
        - Employees
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Employee ID
      responses:
        "200":
          description: Employee removed successfully
        "400":
          description: Error removing employee
